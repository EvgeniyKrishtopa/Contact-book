{"version":3,"sources":["components/Topbar/styles.module.scss","store/state/index.ts","routes.tsx","currentUserProvider.tsx","components/Topbar/index.tsx","components/Footer/index.tsx","store/reducers/contacts.ts","store/reducers/user.ts","store/reducers/index.ts","App.tsx","index.tsx","store/constants.js","context/index.tsx","store/actions/Users/actions.ts","components/Loader/index.tsx","store/firebase.js","selectors/index.tsx","components/Loader/styles.module.scss","components/Footer/styles.module.scss"],"names":["module","exports","preloadedState","Authentication","lazy","HomePage","StartPage","Routes","fallback","Loader","path","component","exact","CurrentUserProvider","children","dispatch","useDispatch","useEffect","IsLogIn","user","useSelector","state","getCurrentUser","Provider","value","TopBar","userData","useContext","CurrentUserContext","useState","currentUserData","setCurrentUserData","handleAuthPages","changeAuthPage","className","styles","navbar","logo","to","icon","size","nav","underlineClosing","activeClassName","active","onClick","displayName","Footer","footer","href","CONTACTSSTATE","loading","contactsData","error","contacts","action","type","GET_CURRENT_USER_CONTACTS","SEND_CONTACT_STARTED","SEND_CONTACT_SUCCESS","SEND_CONTACT_ERROR","DELETE_USER_CONTACT","FILTERED_CONTACT_BY_EMAIL","CHANGE_CONTACT_STATUS","FILTERED_CONTACT_BY_STATUS","USERSTATE","isLoginnedUser","LOG_IN_STARTED","LOG_IN_SUCCESS","LOG_IN_ERROR","SIGN_UP_STARTED","SIGN_UP_SUCCESS","SIGN_UP_ERROR","SIGN_OUT_STARTED","SIGN_OUT_SUCCESS","SIGN_OUT_ERROR","IS_LOG_IN_STARTED","IS_LOG_IN_SUCCESS","IS_LOG_IN_ERROR","CHANGE_AUTH_PAGE","rootReducer","combineReducers","form","formReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById","createContext","auth","firebase","LogIn","userEmail","userPassword","signInWithEmailAndPassword","then","logInSuccess","catch","logInEroor","SignUp","userLogin","createUserWithEmailAndPassword","updateProfile","signUpSuccess","signUpError","LogOut","signOut","logOutError","onAuthStateChanged","isLoginSuccess","message","ldsDualRing","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getCurrentUserContacts"],"mappings":"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","file":"static/js/main.75c8b075.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"styles_navbar__3FWxK\",\"logo\":\"styles_logo__1KJQF\",\"nav\":\"styles_nav__3I8l3\",\"underlineClosing\":\"styles_underlineClosing__1ckTC\",\"active\":\"styles_active__-5DQK\",\"userName\":\"styles_userName__2PKny\"};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof window === 'object' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState =>\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(thunk)),\r\n  );\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Loader from 'components/Loader';\r\nconst Authentication = lazy(() => import('pages/Authentication'));\r\nconst HomePage = lazy(() => import('pages/Homepage'));\r\nconst StartPage = lazy(() => import('pages/StartPage'));\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <Switch>\r\n        <Route path=\"/\" component={StartPage} exact />\r\n        <Route path=\"/home\" component={HomePage} />\r\n        <Route path=\"/login\" component={Authentication} />\r\n        <Route path=\"/register\" component={Authentication} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useEffect } from 'react';\r\nimport { CurrentUserContext } from 'context';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IsLogIn } from 'store/actions/Users/actions';\r\nimport { getCurrentUser } from 'selectors';\r\nimport { IUser } from 'typings/interfaces';\r\nimport { RootState } from 'store/reducers';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst CurrentUserProvider = ({ children }: Props): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(IsLogIn());\r\n  }, [dispatch]);\r\n\r\n  const user = useSelector<RootState, IUser>(state => getCurrentUser(state));\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={user}>\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CurrentUserProvider;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport styles from './styles.module.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CurrentUserContext } from 'context';\r\nimport { changeAuthPage } from 'store/actions/Users/actions';\r\n\r\nconst TopBar: React.FC = () => {\r\n  const { userData } = useContext(CurrentUserContext);\r\n  const [currentUserData, setCurrentUserData] = useState<any | null>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAuthPages = () => {\r\n    dispatch(changeAuthPage());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentUserData(userData);\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div className={styles.navbar}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <strong className={styles.logo}>\r\n            <NavLink to=\"/\">\r\n              <MaterialIcon icon=\"view_list\" size=\"large\" /> Y C B\r\n            </NavLink>\r\n          </strong>\r\n          <nav className={styles.nav}>\r\n            <ul>\r\n              {!currentUserData && (\r\n                <>\r\n                  <li>\r\n                    <NavLink\r\n                      to=\"/login\"\r\n                      className={styles.underlineClosing}\r\n                      activeClassName={styles.active}\r\n                      onClick={handleAuthPages}\r\n                    >\r\n                      Log In\r\n                    </NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <NavLink\r\n                      to=\"/register\"\r\n                      className={styles.underlineClosing}\r\n                      activeClassName={styles.active}\r\n                      onClick={handleAuthPages}\r\n                    >\r\n                      Sign Up\r\n                    </NavLink>\r\n                  </li>\r\n                </>\r\n              )}\r\n\r\n              {currentUserData && <li>{currentUserData.displayName}</li>}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className=\"container\">\r\n        <div className=\"projectInfo\">\r\n          Designed and built with all the love in the world by the &nbsp;\r\n          <a href=\"https://www.linkedin.com/in/evgeniy-krishtopa/\">\r\n            Evgeniy Krishtopa\r\n          </a>\r\n          &nbsp;&copy;2020\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  GET_CURRENT_USER_CONTACTS,\r\n  SEND_CONTACT_STARTED,\r\n  SEND_CONTACT_SUCCESS,\r\n  SEND_CONTACT_ERROR,\r\n  DELETE_USER_CONTACT,\r\n  FILTERED_CONTACT_BY_EMAIL,\r\n  CHANGE_CONTACT_STATUS,\r\n  FILTERED_CONTACT_BY_STATUS,\r\n} from 'store/constants';\r\nimport { IContacts } from 'typings/interfaces';\r\nimport { ContactActionTypes } from 'store/actions/Contacts/types';\r\n\r\nconst CONTACTSSTATE: IContacts = {\r\n  loading: false,\r\n  contactsData: [],\r\n  error: null,\r\n};\r\n\r\nconst contacts = (\r\n  state = CONTACTSSTATE,\r\n  action: ContactActionTypes,\r\n): IContacts => {\r\n  switch (action.type) {\r\n    case GET_CURRENT_USER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contactsData: action.contactsData,\r\n      };\r\n    case SEND_CONTACT_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: action.loading,\r\n      };\r\n\r\n    case SEND_CONTACT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: action.loading,\r\n        error: null,\r\n      };\r\n\r\n    case SEND_CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case DELETE_USER_CONTACT:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case FILTERED_CONTACT_BY_EMAIL:\r\n      return {\r\n        ...state,\r\n        contactsData: action.contactsData,\r\n      };\r\n    case CHANGE_CONTACT_STATUS:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case FILTERED_CONTACT_BY_STATUS:\r\n      return {\r\n        ...state,\r\n        contactsData: action.contactsData,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contacts;\r\n","import {\r\n  LOG_IN_STARTED,\r\n  LOG_IN_ERROR,\r\n  LOG_IN_SUCCESS,\r\n  IS_LOG_IN_STARTED,\r\n  IS_LOG_IN_ERROR,\r\n  IS_LOG_IN_SUCCESS,\r\n  SIGN_UP_STARTED,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_OUT_STARTED,\r\n  SIGN_OUT_ERROR,\r\n  SIGN_OUT_SUCCESS,\r\n  CHANGE_AUTH_PAGE,\r\n} from 'store/constants';\r\nimport { IUser } from 'typings/interfaces';\r\nimport { UserActionTypes } from 'store/actions/Users/types';\r\n\r\nconst USERSTATE: IUser = {\r\n  loading: false,\r\n  userData: null,\r\n  error: null,\r\n  isLoginnedUser: false,\r\n};\r\n\r\nconst user = (state = USERSTATE, action: UserActionTypes): IUser => {\r\n  switch (action.type) {\r\n    case LOG_IN_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: action.loading,\r\n      };\r\n\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userData: action.userData,\r\n        loading: action.loading,\r\n        error: action.error,\r\n        isLoginnedUser: action.isLoginnedUser,\r\n      };\r\n\r\n    case LOG_IN_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case SIGN_UP_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: action.loading,\r\n      };\r\n\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userData: action.userData,\r\n        loading: action.loading,\r\n        error: action.error,\r\n        isLoginnedUser: action.isLoginnedUser,\r\n      };\r\n\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case SIGN_OUT_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: action.loading,\r\n      };\r\n\r\n    case SIGN_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userData: action.userData,\r\n        loading: action.loading,\r\n        error: action.error,\r\n        isLoginnedUser: action.isLoginnedUser,\r\n      };\r\n\r\n    case SIGN_OUT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case IS_LOG_IN_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: action.loading,\r\n      };\r\n\r\n    case IS_LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userData: action.userData,\r\n        loading: action.loading,\r\n        error: action.error,\r\n        isLoginnedUser: action.isLoginnedUser,\r\n      };\r\n\r\n    case IS_LOG_IN_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    }\r\n\r\n    case CHANGE_AUTH_PAGE: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default user;\r\n","import { combineReducers } from 'redux';\r\nimport contacts from './contacts';\r\nimport user from './user';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst rootReducer = combineReducers({ user, contacts, form: formReducer });\r\n\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport 'normalize.css';\r\nimport 'styles/common.scss';\r\nimport Routes from 'routes';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport CurrentUserProvider from 'currentUserProvider';\r\nimport TopBar from 'components/Topbar';\r\nimport Footer from 'components/Footer';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/state';\r\n\r\nconst App: React.FC = () => (\r\n  <Provider store={store}>\r\n    <CurrentUserProvider>\r\n      <Router>\r\n        <TopBar />\r\n        <Routes />\r\n      </Router>\r\n      <Footer />\r\n    </CurrentUserProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","export const LOG_IN_STARTED = 'LOG_IN_STARTED';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_ERROR = 'LOG_IN_ERROR';\r\n\r\nexport const IS_LOG_IN_STARTED = 'IS_LOG_IN_STARTED';\r\nexport const IS_LOG_IN_SUCCESS = 'IS_LOG_IN_SUCCESS';\r\nexport const IS_LOG_IN_ERROR = 'IS_LOG_IN_ERROR';\r\n\r\nexport const SIGN_UP_STARTED = 'SIGN_UP_STARTED';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_ERROR = 'SIGN_UP_ERROR';\r\n\r\nexport const SIGN_OUT_STARTED = 'SIGN_OUT_STARTED';\r\nexport const SIGN_OUT_SUCCESS = 'SIGN_OUT_SUCCESS';\r\nexport const SIGN_OUT_ERROR = 'SIGN_OUT_ERROR';\r\n\r\nexport const CHANGE_AUTH_PAGE = 'CHANGE_AUTH_PAGE';\r\n\r\nexport const SEND_CONTACT_STARTED = 'SEND_CONTACT_STARTED';\r\nexport const SEND_CONTACT_SUCCESS = 'SEND_CONTACT_SUCCESS';\r\nexport const SEND_CONTACT_ERROR = 'SEND_CONTACT_ERROR';\r\n\r\nexport const GET_CURRENT_USER_CONTACTS = 'GET_CURRENT_USER_CONTACTS';\r\nexport const DELETE_USER_CONTACT = 'DELETE_USER_CONTACT';\r\nexport const FILTERED_CONTACT_BY_EMAIL = 'FILTERED_CONTACT_BY_EMAIL';\r\nexport const CHANGE_CONTACT_STATUS = 'CHANGE_CONTACT_STATUS';\r\nexport const FILTERED_CONTACT_BY_STATUS = 'FILTERED_CONTACT_BY_STATUS';\r\n","import { createContext } from 'react';\r\nimport { IUser } from 'typings/interfaces';\r\n\r\nexport const CurrentUserContext = createContext<IUser>({\r\n  loading: false,\r\n  userData: null,\r\n  error: null,\r\n  isLoginnedUser: false,\r\n});\r\n","import firebase from 'store/firebase';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from 'store/reducers';\r\nimport { UserActionTypes } from './types';\r\nimport { IError } from 'typings/interfaces';\r\n\r\nimport {\r\n  LOG_IN_STARTED,\r\n  LOG_IN_ERROR,\r\n  LOG_IN_SUCCESS,\r\n  IS_LOG_IN_STARTED,\r\n  IS_LOG_IN_ERROR,\r\n  IS_LOG_IN_SUCCESS,\r\n  SIGN_UP_STARTED,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_OUT_STARTED,\r\n  SIGN_OUT_ERROR,\r\n  SIGN_OUT_SUCCESS,\r\n  CHANGE_AUTH_PAGE,\r\n} from 'store/constants';\r\n\r\nconst auth = firebase.auth();\r\n\r\ntype ThunkType = ThunkAction<void, RootState, unknown, UserActionTypes>;\r\n\r\nconst logInStarted = (): UserActionTypes => {\r\n  return {\r\n    type: LOG_IN_STARTED,\r\n    loading: true,\r\n  };\r\n};\r\n\r\nconst logInSuccess = (user: any | null): UserActionTypes => {\r\n  return {\r\n    type: LOG_IN_SUCCESS,\r\n    userData: user,\r\n    loading: false,\r\n    error: null,\r\n    isLoginnedUser: true,\r\n  };\r\n};\r\n\r\nconst logInEroor = (error: IError): UserActionTypes => {\r\n  return {\r\n    type: LOG_IN_ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const LogIn = (userEmail: string, userPassword: string): ThunkType => {\r\n  return dispatch => {\r\n    dispatch(logInStarted());\r\n    auth\r\n      .signInWithEmailAndPassword(userEmail, userPassword)\r\n      .then(({ user }) => {\r\n        dispatch(logInSuccess(user));\r\n      })\r\n      .catch(error => {\r\n        dispatch(logInEroor(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst signUpStarted = (): UserActionTypes => {\r\n  return {\r\n    type: SIGN_UP_STARTED,\r\n    loading: true,\r\n  };\r\n};\r\n\r\nconst signUpSuccess = (user: any | null): UserActionTypes => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    userData: user,\r\n    loading: false,\r\n    error: null,\r\n    isLoginnedUser: true,\r\n  };\r\n};\r\n\r\nconst signUpError = (error: IError): UserActionTypes => {\r\n  return {\r\n    type: SIGN_UP_ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const SignUp = (\r\n  userEmail: string,\r\n  userPassword: string,\r\n  userLogin: string,\r\n): ThunkType => {\r\n  return dispatch => {\r\n    dispatch(signUpStarted());\r\n    auth\r\n      .createUserWithEmailAndPassword(userEmail, userPassword)\r\n      .then(({ user }) => {\r\n        if (user) {\r\n          user\r\n            .updateProfile({ displayName: userLogin })\r\n            .then(() => dispatch(signUpSuccess(user)));\r\n        }\r\n      })\r\n\r\n      .catch(error => {\r\n        dispatch(signUpError(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst logOutStarted = (): UserActionTypes => {\r\n  return {\r\n    type: SIGN_OUT_STARTED,\r\n    loading: true,\r\n  };\r\n};\r\n\r\nconst logOutSuccess = (): UserActionTypes => {\r\n  return {\r\n    type: SIGN_OUT_SUCCESS,\r\n    userData: null,\r\n    loading: false,\r\n    error: null,\r\n    isLoginnedUser: false,\r\n  };\r\n};\r\n\r\nconst logOutError = (error: IError): UserActionTypes => {\r\n  return {\r\n    type: SIGN_OUT_ERROR,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const LogOut = (): ThunkType => {\r\n  return dispatch => {\r\n    dispatch(logOutStarted());\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(logOutSuccess());\r\n      })\r\n\r\n      .catch(error => {\r\n        dispatch(logOutError(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst isLoginStarted = (): UserActionTypes => {\r\n  return {\r\n    type: IS_LOG_IN_STARTED,\r\n    loading: true,\r\n  };\r\n};\r\n\r\nconst isLoginSuccess = (user: any | null): UserActionTypes => {\r\n  return {\r\n    type: IS_LOG_IN_SUCCESS,\r\n    userData: user,\r\n    loading: false,\r\n    error: null,\r\n    isLoginnedUser: true,\r\n  };\r\n};\r\n\r\nconst isLoginError = (): UserActionTypes => {\r\n  return {\r\n    type: IS_LOG_IN_ERROR,\r\n    error: { message: 'No user have signed in' },\r\n  };\r\n};\r\n\r\nexport const IsLogIn = (): ThunkType => {\r\n  return dispatch => {\r\n    dispatch(isLoginStarted());\r\n\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        dispatch(isLoginSuccess(user));\r\n      } else {\r\n        dispatch(isLoginError());\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const changeAuthPage = (): UserActionTypes => {\r\n  return {\r\n    type: CHANGE_AUTH_PAGE,\r\n    error: null,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Loader: React.FC = () => {\r\n  return (\r\n    <div className=\"page-center\">\r\n      <div className={styles.ldsDualRing}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyD8HSI8eD9HdEGtFtZCdQayV4qTDLi6oH4',\r\n  authDomain: 'contact-book-refactored.firebaseapp.com',\r\n  databaseURL: 'https://contact-book-refactored.firebaseio.com',\r\n  projectId: 'contact-book-refactored',\r\n  storageBucket: 'contact-book-refactored.appspot.com',\r\n  messagingSenderId: '809880163120',\r\n  appId: '1:809880163120:web:37ebdcacba3eb613212ef5',\r\n  measurementId: 'G-EJZWLE5Y7B',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import { RootState } from 'store/reducers';\r\nimport { IUser, IContacts } from 'typings/interfaces';\r\n\r\nexport const getCurrentUser = (state: RootState): IUser => state.user;\r\nexport const getCurrentUserContacts = (state: RootState): IContacts =>\r\n  state.contacts;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"styles_ldsDualRing__1n_Zo\",\"lds-dual-ring\":\"styles_lds-dual-ring__3BECe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer__2QXJw\"};"],"sourceRoot":""}