{"version":3,"sources":["pages/Homepage/index.tsx"],"names":["IsLogginedUserPage","lazy","Homepage","useContext","CurrentUserContext","userData","isLoginnedUser","useState","currentUserData","setCurrentUserData","isLoginnedUserStatus","setIsLoginnedUserStatus","useEffect","user"],"mappings":"uKAGMA,EAAqBC,gBAAK,kBAAM,8DAwBvBC,UAtBY,WAAO,IAAD,EACMC,qBAAWC,KAAxCC,EADuB,EACvBA,SAAUC,EADa,EACbA,eADa,EAEeC,mBAAqB,MAFpC,mBAExBC,EAFwB,KAEPC,EAFO,OAGyBF,oBACtD,GAJ6B,mBAGxBG,EAHwB,KAGFC,EAHE,KAe/B,OARAC,qBAAU,WACRH,EAAmBJ,KAClB,CAACA,IAEJO,qBAAU,WACRD,EAAwBL,KACvB,CAACA,IAEGI,GAAwBF,EAC7B,kBAACR,EAAD,CAAoBa,KAAML,IAE1B,kBAAC,IAAD","file":"static/js/8.09a7fc94.chunk.js","sourcesContent":["import React, { lazy, useContext, useState, useEffect } from 'react';\r\nimport { CurrentUserContext } from 'context';\r\nimport Loader from 'components/Loader';\r\nconst IsLogginedUserPage = lazy(() => import('./isLoggedUser'));\r\n\r\nconst Homepage: React.FC = () => {\r\n  const { userData, isLoginnedUser } = useContext(CurrentUserContext);\r\n  const [currentUserData, setCurrentUserData] = useState<any | null>(null);\r\n  const [isLoginnedUserStatus, setIsLoginnedUserStatus] = useState<boolean>(\r\n    false,\r\n  );\r\n\r\n  useEffect(() => {\r\n    setCurrentUserData(userData);\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    setIsLoginnedUserStatus(isLoginnedUser);\r\n  }, [isLoginnedUser]);\r\n\r\n  return isLoginnedUserStatus && currentUserData ? (\r\n    <IsLogginedUserPage user={currentUserData} />\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n"],"sourceRoot":""}